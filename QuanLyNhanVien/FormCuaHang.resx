<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>